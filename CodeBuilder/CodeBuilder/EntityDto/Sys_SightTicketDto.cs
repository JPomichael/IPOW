//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace iPow.Domain.Dto
{
    using System.ComponentModel;
    using System.Runtime.Serialization;
    
    /// <summary>
    /// Sys_SightTicket
    /// </summary>
    [Serializable]
    [DataContract]
    [FluentValidation.Attributes.Validator(typeof(Validate.Sys_SightTicketDtoValidate))]
    public partial class Sys_SightTicketDto
    {
        #region Primitive Properties
    
        /// <summary>
        /// 门票ID
        /// </summary>
    	[DataMember]
    	[DisplayName("门票ID")]
        public virtual int TicketID
        {
            get;
            set;
        }
    
        /// <summary>
        /// 景区ID
        /// </summary>
    	[DataMember]
    	[DisplayName("景区ID")]
        public virtual int ParkID
        {
            get { return _parkID; }
            set
            {
                if (_parkID != value)
                {
                    if (Sys_SightInfo != null && Sys_SightInfo.ParkID != value)
                    {
                        Sys_SightInfo = null;
                    }
                    _parkID = value;
                }
            }
        }
        private int _parkID;
    
        /// <summary>
        /// 门票名
        /// </summary>
    	[DataMember]
    	[DisplayName("门票名")]
        public virtual string Title
        {
            get;
            set;
        }
    
        /// <summary>
        /// 全票
        /// </summary>
    	[DataMember]
    	[DisplayName("全票")]
        public virtual Nullable<int> AllPrice
        {
            get;
            set;
        }
    
        /// <summary>
        /// 半票
        /// </summary>
    	[DataMember]
    	[DisplayName("半票")]
        public virtual Nullable<int> HalfPrice
        {
            get;
            set;
        }
    
        /// <summary>
        /// 备注
        /// </summary>
    	[DataMember]
    	[DisplayName("备注")]
        public virtual string Remark
        {
            get;
            set;
        }
    
        /// <summary>
        /// 操作用户ID
        /// </summary>
    	[DataMember]
    	[DisplayName("操作用户ID")]
        public virtual Nullable<int> UserID
        {
            get;
            set;
        }
    
        /// <summary>
        /// 添加时间
        /// </summary>
    	[DataMember]
    	[DisplayName("添加时间")]
        public virtual Nullable<System.DateTime> AddTime
        {
            get;
            set;
        }
    
        /// <summary>
        /// 是否被删除 也可理解为是否显示
        /// </summary>
    	[DataMember]
    	[DisplayName("是否被删除 也可理解为是否显示")]
        public virtual Nullable<int> IsDelete
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
        public virtual Sys_SightInfo Sys_SightInfo
        {
            get { return _sys_SightInfo; }
            set
            {
                if (!ReferenceEquals(_sys_SightInfo, value))
                {
                    var previousValue = _sys_SightInfo;
                    _sys_SightInfo = value;
                    FixupSys_SightInfo(previousValue);
                }
            }
        }
        private Sys_SightInfo _sys_SightInfo;

        #endregion
        #region Association Fixup
    
        private void FixupSys_SightInfo(Sys_SightInfo previousValue)
        {
            if (previousValue != null && previousValue.Sys_SightTicket.Contains(this))
            {
                previousValue.Sys_SightTicket.Remove(this);
            }
    
            if (Sys_SightInfo != null)
            {
                if (!Sys_SightInfo.Sys_SightTicket.Contains(this))
                {
                    Sys_SightInfo.Sys_SightTicket.Add(this);
                }
                if (ParkID != Sys_SightInfo.ParkID)
                {
                    ParkID = Sys_SightInfo.ParkID;
                }
            }
        }

        #endregion
    }
}
